//#include<iostream>
//using namespace std;
//
//class Person
//{
//public:
//	//构造函数
//	//没有返回值，不用写void
//	//函数名和类名相同，可以有参数，能够重载
//	//创建对象的时候，构造函数可以自动调用，而且只调用一次
//	/*Person()
//	{
//		cout << "这是Person的构造函数" << endl;
//	}*/
//	//析构函数
//	//没有返回值，不写void
//	//函数名和类名相同，只是在前面加一个~ 
//	//不可以有参数，不可以发生重载
//	//对象销毁前，会调用析构函数，而且只会调用一次
//	~Person()
//	{
//		cout << "这是Person的析构函数" << endl;
//	}
//
//};
//
////void test01()
////{
////	//创建在栈上的局部函数，函数调用结束会销毁对象，故能看到
////	//析构函数的对象,会释放
////	Person p;
////}
//
//
//
//int main1()
//{
//	//test01();
//	Person p1;
//	system("pause");
//	return 0;
//}